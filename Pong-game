from pygame import *
init()

SW, SH = 640, 480
FPS = 120
PLAYER_IMG = 'paleta.jpg'
BALL_IMG = 'Gomita (1).png'
SPEED_X = 3
SPEED_Y = 3

screen = display.set_mode((SW, SH))
display.set_caption('Pong')

font.init()
font = font.Font('WDXLLubrifontTC-Regular.ttf', 50)

# clase padre para otros objetos
class GameSprite(sprite.Sprite):
    # constructor de clase
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # llamamos al constructor de la clase (Sprite):
        super().__init__()

        # cada objeto debe almacenar una propiedad image
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed

        # cada objeto debe almacenar la propiedad rect en la cual está inscrito
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    # método que dibuja al personaje en la ventana
    def reset(self):
        screen.blit(self.image, (self.rect.x, self.rect.y))


# clase del jugador principal
class Player(GameSprite):
    def update_p1(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        elif keys[K_s] and self.rect.y <= SH - 120:
            self.rect.y += self.speed
        

    def update_p2(self):
            keys = key.get_pressed()
            if keys[K_UP] and self.rect.y > 5:
                self.rect.y -= self.speed
            elif keys[K_DOWN] and self.rect.y <= SH - 120:
                self.rect.y += self.speed


player_1 = Player(PLAYER_IMG, 0, 100, 40, 100, 5)
player_2 = Player(PLAYER_IMG, SW - 40, 100, 40, 100, 5)
ball = GameSprite(BALL_IMG, 50, 50, 50, 50, 5)



clock = time.Clock()
run = True
finish = False
while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
    if not finish:
        screen.fill((0, 0, 0))
        player_1.reset()
        player_2.reset()
        player_1.update_p1()
        player_2.update_p2()
        ball.reset()

        ball.rect.x += SPEED_X
        ball.rect.y += SPEED_Y

        if ball.rect.y <=0:
            SPEED_Y *= -1
        if ball.rect.y >= SH - 50:
            SPEED_Y *= -1
        if sprite.collide_rect(ball, player_1):
            SPEED_X *= -1
        if sprite.collide_rect(ball, player_2):
            SPEED_X *= -1

        if ball.rect.x <= 0:
            player_2_win = font.render('Ha ganado el Jugador 2', 1,
            (0, 100, 255))
            screen.blit(player_2_win, (20, 200))
            finish = True
        elif ball .rect.x >= SW:
            player_1_win = font.render('Ha ganado el Jugador 1', 1,
            (0, 100, 255))
            screen.blit(player_1_win, (20, 200))
            finish = True

    display.update()
    clock.tick(FPS)

quit()
