from pygame import *
init()

SW, SH = 640, 480
FPS = 120
PLAYER_IMG = 'paleta.jpg'


screen = display.set_mode((SW, SH))
display.set_caption('Pong')

# clase padre para otros objetos
class GameSprite(sprite.Sprite):
    # constructor de clase
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # llamamos al constructor de la clase (Sprite):
        super().__init__()

        # cada objeto debe almacenar una propiedad image
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed

        # cada objeto debe almacenar la propiedad rect en la cual está inscrito
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    # método que dibuja al personaje en la ventana
    def reset(self):
        screen.blit(self.image, (self.rect.x, self.rect.y))


# clase del jugador principal
class Player(GameSprite):
    def update_p1(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        elif keys[K_s] and self.rect.y <= SH - 70:
            self.rect.y += self.speed

    def update_p2(self):
            keys = key.get_pressed()
            if keys[K_UP] and self.rect.y > 5:
                self.rect.y -= self.speed
            elif keys[K_DOWN] and self.rect.y <= SW - 70:
                self.rect.y += self.speed

player_1 = Player(PLAYER_IMG, 0, 100, 40, 100, 5)
player_2 = Player(PLAYER_IMG, SW - 40, 100, 40, 100, 5)

class Ball(GameSprite):
    pass


clock = time.Clock()
run = True
finish = False
while run:
    for e in event.get():
        if e.type == QUIT:
            run = False

    screen.fill((0, 0, 0))
    player_1.reset()
    player_2.reset()
    player_1.update_p1()
    player_2.update_p2()

    display.update()
    clock.tick(FPS)

quit()
